{
  "timestamp": "2025-08-15 14:26:54",
  "summary": {
    "total_test_suites": 8,
    "passed_suites": 2,
    "failed_suites": 3
  },
  "results": {
    "system_health": {
      "total_checks": 16,
      "successful_checks": 11,
      "checks": [
        "\u2705 Directory config exists",
        "\u2705 Directory data exists",
        "\u2705 Directory database exists",
        "\u2705 Directory etl exists",
        "\u2705 Directory scripts exists",
        "\u2705 Directory tests exists",
        "\u2705 File requirements.txt exists",
        "\u2705 File requirements-llm.txt exists",
        "\u2705 File docker-compose.yml exists",
        "\u2705 File Makefile exists",
        "\u2705 File README.md exists",
        "\u274c ETL module not importable",
        "\u274c ETL.normalize not importable",
        "\u274c ETL.dedupe not importable",
        "\u274c ETL.schema not importable",
        "\u274c ETL.geocode not importable"
      ]
    },
    "config_tests": {
      "status": "FAILED",
      "output": "============================= test session starts ==============================\nplatform darwin -- Python 3.11.13, pytest-8.3.2, pluggy-1.6.0 -- /Users/maxencelegendre/project/ScrappingBot/.venv/bin/python\ncachedir: .pytest_cache\nrootdir: /Users/maxencelegendre/project/ScrappingBot\nconfigfile: pytest.ini\nplugins: anyio-4.10.0\ncollecting ... collected 23 items\n\ntests/test_configuration.py::TestConfigurationFiles::test_project_structure_exists PASSED [  4%]\ntests/test_configuration.py::TestConfigurationFiles::test_essential_files_exist PASSED [  8%]\ntests/test_configuration.py::TestConfigurationFiles::test_requirements_files_valid PASSED [ 13%]\ntests/test_configuration.py::TestConfigurationFiles::test_gitignore_exists_and_comprehensive FAILED [ 17%]\ntests/test_configuration.py::TestDataHandling::test_data_directory_structure PASSED [ 21%]\ntests/test_configuration.py::TestDataHandling::test_json_file_handling PASSED [ 26%]\ntests/test_configuration.py::TestDataHandling::test_file_path_utilities PASSED [ 30%]\ntests/test_configuration.py::TestDataHandling::test_safe_file_operations PASSED [ 34%]\ntests/test_configuration.py::TestDataHandling::test_data_validation_utilities PASSED [ 39%]\ntests/test_configuration.py::TestLoggingConfiguration::test_logs_directory_setup PASSED [ 43%]\ntests/test_configuration.py::TestLoggingConfiguration::test_logging_configuration PASSED [ 47%]\ntests/test_configuration.py::TestLoggingConfiguration::test_log_rotation_setup PASSED [ 52%]\ntests/test_configuration.py::TestEnvironmentConfiguration::test_environment_variables_handling PASSED [ 56%]\ntests/test_configuration.py::TestEnvironmentConfiguration::test_default_configuration_values PASSED [ 60%]\ntests/test_configuration.py::TestEnvironmentConfiguration::test_configuration_validation PASSED [ 65%]\ntests/test_configuration.py::TestUtilityFunctions::test_url_validation_utilities PASSED [ 69%]\ntests/test_configuration.py::TestUtilityFunctions::test_string_cleaning_utilities PASSED [ 73%]\ntests/test_configuration.py::TestUtilityFunctions::test_number_parsing_utilities FAILED [ 78%]\ntests/test_configuration.py::TestUtilityFunctions::test_date_parsing_utilities PASSED [ 82%]\ntests/test_configuration.py::TestErrorHandling::test_file_not_found_handling PASSED [ 86%]\ntests/test_configuration.py::TestErrorHandling::test_json_parsing_error_handling PASSED [ 91%]\ntests/test_configuration.py::TestErrorHandling::test_network_error_simulation PASSED [ 95%]\ntests/test_configuration.py::TestErrorHandling::test_data_corruption_handling PASSED [100%]\n\n=================================== FAILURES ===================================\n________ TestConfigurationFiles.test_gitignore_exists_and_comprehensive ________\n\nself = <test_configuration.TestConfigurationFiles object at 0x101dccbd0>\n\n    def test_gitignore_exists_and_comprehensive(self):\n        \"\"\"Test that .gitignore exists and covers important patterns.\"\"\"\n        gitignore_path = Path(\".gitignore\")\n        assert gitignore_path.exists(), \".gitignore should exist\"\n    \n        gitignore_content = gitignore_path.read_text()\n    \n        # Important patterns that should be ignored\n        important_patterns = [\n            \"__pycache__\",\n            \"*.pyc\",\n            \".venv\",\n            \".env\",\n            \"node_modules\",\n            \".DS_Store\"\n        ]\n    \n        for pattern in important_patterns:\n>           assert pattern in gitignore_content, f\"Pattern {pattern} should be in .gitignore\"\nE           AssertionError: Pattern *.pyc should be in .gitignore\nE           assert '*.pyc' in '# ====================\\n# ScrappingBot .gitignore\\n# ====================\\n\\n# macOS\\n.DS_Store\\n.DS_Store?\\n._*\\n.Spotlight-V100\\n.Trashes\\nehthumbs.db\\nThumbs.db\\n\\n# Editors/IDEs\\n.vscode/\\n.idea/\\n*.swp\\n*.swo\\n*~\\n.vim/\\n.netrwhist\\n\\n# Python\\n.venv/\\nvenv/\\nenv/\\n__pycache__/\\n*.py[cod]\\n*.pyo\\n*.pyd\\n*.egg-info/\\n.eggs/\\n.pytest_cache/\\n.mypy_cache/\\n.ruff_cache/\\n.coverage\\ncoverage.xml\\nhtmlcov/\\n.tox/\\n.nox/\\n.cache/\\nnosetests.xml\\n*.cover\\n*.py,cover\\n.hypothesis/\\n.pdm.toml\\n\\n# Node.js / JavaScript\\nnode_modules/\\n**/node_modules/\\n.npm/\\n.pnpm-store/\\n.yarn/\\n.yarn-cache/\\n.yarnrc.yml\\n.eslintcache\\nnpm-debug.log*\\nyarn-debug.log*\\nyarn-error.log*\\nlerna-debug.log*\\n\\n# Build outputs\\n**/dist/\\n**/build/\\n**/.vite/\\n**/.vite-cache/\\n**/.parcel-cache/\\n**/.next/\\n**/.nuxt/\\nout/\\n.output/\\n\\n# Docker & Container files\\n.dockerignore\\ndocker-compose.override.yml\\ndocker-compose.local.yml\\n.docker/\\n*.pid\\n.container-*\\n\\n# Database files\\n*.sqlite\\n*.sqlite3\\n*.db\\n*.db-journal\\n*.db-wal\\n*.db-shm\\ndata/*.sql\\nbackups/\\ndumps/\\n\\n# Environment & Secrets (NEVER COMMIT)\\n.env\\n.env.*\\n*.env\\n**/.env\\n**/.env.*\\n.local\\n.envrc\\nsecrets.yml\\nsecrets.json\\n\\n# Logs & PI...last_run.json\\ndata/geocache.json\\ndata/cache/\\ndata/tmp/\\ndata/exports/\\ndata/backups/\\noutput/\\ndownloads/\\nuploads/\\n\\n# Playwright & Browser automation\\nplaywright-report/\\ntest-results/\\n.playwright/\\nplaywright/.cache/\\nscreenshots/\\n*.png\\n*.jpg\\n*.jpeg\\ndebug_*.html\\n\\n# Cloudflare Workers / Wrangler\\nworkers/.wrangler/\\nworkers/.dev.vars\\n.miniflare-*\\n.mf\\n.wrangler/\\n\\n# Archives & Compressed files\\n*.zip\\n*.tar\\n*.tgz\\n*.gz\\n*.rar\\n*.7z\\n*.bz2\\n*.xz\\n\\n# Temporary files\\n*.tmp\\n*.temp\\n*.swp\\n*.swo\\n*~\\n.tmp/\\ntemp/\\n\\n# OS generated files\\nThumbs.db\\nehthumbs.db\\nDesktop.ini\\n$RECYCLE.BIN/\\n.LSOverride\\nIcon?\\n\\n# Network & SSL certificates\\n*.pem\\n*.key\\n*.crt\\n*.p12\\n*.pfx\\n\\n# IDE specific\\n.vscode/settings.json\\n.vscode/tasks.json\\n.vscode/launch.json\\n.vscode/extensions.json\\n*.code-workspace\\n\\n# Runtime & Process files\\npids/\\n*.pid\\n*.seed\\n*.pid.lock\\n\\n# Coverage & Test reports\\ncoverage/\\n.nyc_output/\\njunit.xml\\ntest-report.xml\\n\\n# AI/LLM model files (can be large)\\n*.gguf\\n*.bin\\nmodels/\\ncheckpoints/\\n\\n# Monitoring & Analytics\\ngrafana/data/\\nprometheus/data/\\nmetrics/\\nanalytics/\\n\\n# Custom application data\\nuser_data/\\nprivate/\\nlocal/\\npersonal/\\n'\n\ntests/test_configuration.py:92: AssertionError\n______________ TestUtilityFunctions.test_number_parsing_utilities ______________\n\nself = <test_configuration.TestUtilityFunctions object at 0x101ddad50>\n\n    def test_number_parsing_utilities(self):\n        \"\"\"Test number parsing and conversion utilities.\"\"\"\n        number_tests = [\n            (\"123\", 123.0),\n            (\"123.45\", 123.45),\n            (\"1,234\", 1234.0),\n            (\"1,234.56\", 1234.56),\n            (\"1.234,56\", 1234.56),  # European format\n            (\"invalid\", None),\n            (\"\", None)\n        ]\n    \n        for input_str, expected_value in number_tests:\n            try:\n                # Basic number parsing logic\n                if not input_str or input_str == \"invalid\":\n                    result = None\n                else:\n                    # Handle different formats\n                    clean_str = input_str.replace(\",\", \".\")\n                    if clean_str.count(\".\") > 1:\n                        # European format like \"1.234,56\"\n                        parts = input_str.split(\",\")\n                        if len(parts) == 2:\n                            clean_str = parts[0].replace(\".\", \"\") + \".\" + parts[1]\n                        else:\n                            clean_str = input_str.replace(\",\", \"\")\n                    else:\n                        clean_str = input_str.replace(\",\", \"\")\n    \n>                   result = float(clean_str)\nE                   ValueError: could not convert string to float: '1.234.56'\n\ntests/test_configuration.py:425: ValueError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_configuration.TestUtilityFunctions object at 0x101ddad50>\n\n    def test_number_parsing_utilities(self):\n        \"\"\"Test number parsing and conversion utilities.\"\"\"\n        number_tests = [\n            (\"123\", 123.0),\n            (\"123.45\", 123.45),\n            (\"1,234\", 1234.0),\n            (\"1,234.56\", 1234.56),\n            (\"1.234,56\", 1234.56),  # European format\n            (\"invalid\", None),\n            (\"\", None)\n        ]\n    \n        for input_str, expected_value in number_tests:\n            try:\n                # Basic number parsing logic\n                if not input_str or input_str == \"invalid\":\n                    result = None\n                else:\n                    # Handle different formats\n                    clean_str = input_str.replace(\",\", \".\")\n                    if clean_str.count(\".\") > 1:\n                        # European format like \"1.234,56\"\n                        parts = input_str.split(\",\")\n                        if len(parts) == 2:\n                            clean_str = parts[0].replace(\".\", \"\") + \".\" + parts[1]\n                        else:\n                            clean_str = input_str.replace(\",\", \"\")\n                    else:\n                        clean_str = input_str.replace(\",\", \"\")\n    \n                    result = float(clean_str)\n    \n                assert result == expected_value, \\\n                    f\"Number parsing for '{input_str}' failed: got {result}, expected {expected_value}\"\n    \n            except ValueError:\n>               assert expected_value is None, \\\n                    f\"Number parsing for '{input_str}' should have failed but expected {expected_value}\"\nE               AssertionError: Number parsing for '1,234.56' should have failed but expected 1234.56\nE               assert 1234.56 is None\n\ntests/test_configuration.py:431: AssertionError\n=========================== short test summary info ============================\nFAILED tests/test_configuration.py::TestConfigurationFiles::test_gitignore_exists_and_comprehensive\nFAILED tests/test_configuration.py::TestUtilityFunctions::test_number_parsing_utilities\n========================= 2 failed, 21 passed in 0.06s =========================\n",
      "error": ""
    },
    "unit_tests": {
      "status": "FAILED",
      "output": "============================= test session starts ==============================\nplatform darwin -- Python 3.11.13, pytest-8.3.2, pluggy-1.6.0 -- /Users/maxencelegendre/project/ScrappingBot/.venv/bin/python\ncachedir: .pytest_cache\nrootdir: /Users/maxencelegendre/project/ScrappingBot\nconfigfile: pytest.ini\nplugins: anyio-4.10.0\ncollecting ... collected 139 items / 21 deselected / 118 selected\n\ntests/test_configuration.py::TestConfigurationFiles::test_project_structure_exists PASSED [  0%]\ntests/test_configuration.py::TestConfigurationFiles::test_essential_files_exist PASSED [  1%]\ntests/test_configuration.py::TestConfigurationFiles::test_requirements_files_valid PASSED [  2%]\ntests/test_configuration.py::TestConfigurationFiles::test_gitignore_exists_and_comprehensive FAILED [  3%]\ntests/test_configuration.py::TestDataHandling::test_data_directory_structure PASSED [  4%]\ntests/test_configuration.py::TestDataHandling::test_json_file_handling PASSED [  5%]\ntests/test_configuration.py::TestDataHandling::test_file_path_utilities PASSED [  5%]\ntests/test_configuration.py::TestDataHandling::test_safe_file_operations PASSED [  6%]\ntests/test_configuration.py::TestDataHandling::test_data_validation_utilities PASSED [  7%]\ntests/test_configuration.py::TestLoggingConfiguration::test_logs_directory_setup PASSED [  8%]\ntests/test_configuration.py::TestLoggingConfiguration::test_logging_configuration PASSED [  9%]\ntests/test_configuration.py::TestLoggingConfiguration::test_log_rotation_setup PASSED [ 10%]\ntests/test_configuration.py::TestEnvironmentConfiguration::test_environment_variables_handling PASSED [ 11%]\ntests/test_configuration.py::TestEnvironmentConfiguration::test_default_configuration_values PASSED [ 11%]\ntests/test_configuration.py::TestEnvironmentConfiguration::test_configuration_validation PASSED [ 12%]\ntests/test_configuration.py::TestUtilityFunctions::test_url_validation_utilities PASSED [ 13%]\ntests/test_configuration.py::TestUtilityFunctions::test_string_cleaning_utilities PASSED [ 14%]\ntests/test_configuration.py::TestUtilityFunctions::test_number_parsing_utilities FAILED [ 15%]\ntests/test_configuration.py::TestUtilityFunctions::test_date_parsing_utilities PASSED [ 16%]\ntests/test_configuration.py::TestErrorHandling::test_file_not_found_handling PASSED [ 16%]\ntests/test_configuration.py::TestErrorHandling::test_json_parsing_error_handling PASSED [ 17%]\ntests/test_configuration.py::TestErrorHandling::test_network_error_simulation PASSED [ 18%]\ntests/test_configuration.py::TestErrorHandling::test_data_corruption_handling PASSED [ 19%]\ntests/test_etl_dedupe.py::TestHashGeneration::test_generate_listing_hash_basic PASSED [ 20%]\ntests/test_etl_dedupe.py::TestHashGeneration::test_generate_listing_hash_consistency PASSED [ 21%]\ntests/test_etl_dedupe.py::TestHashGeneration::test_generate_listing_hash_different_listings PASSED [ 22%]\ntests/test_etl_dedupe.py::TestHashGeneration::test_generate_listing_hash_missing_fields PASSED [ 22%]\ntests/test_etl_dedupe.py::TestHashGeneration::test_generate_listing_hash_different PASSED [ 23%]\ntests/test_etl_dedupe.py::TestHashGeneration::test_generate_listing_hash_missing_fields_partial PASSED [ 24%]\ntests/test_etl_dedupe.py::TestHashGeneration::test_generate_listing_hash_case_insensitive PASSED [ 25%]\ntests/test_etl_dedupe.py::TestDeduplication::test_dedupe_records_empty_list PASSED [ 26%]\ntests/test_etl_dedupe.py::TestDeduplication::test_dedupe_records_no_duplicates PASSED [ 27%]\ntests/test_etl_dedupe.py::TestDeduplication::test_dedupe_records_with_duplicates PASSED [ 27%]\ntests/test_etl_dedupe.py::TestDeduplication::test_dedupe_alias PASSED    [ 28%]\ntests/test_etl_dedupe.py::TestDeduplication::test_dedupe_records_preserves_first_occurrence PASSED [ 29%]\ntests/test_etl_dedupe.py::TestDuplicateDetection::test_find_duplicates_none PASSED [ 30%]\ntests/test_etl_dedupe.py::TestDuplicateDetection::test_find_duplicates_present PASSED [ 31%]\ntests/test_etl_dedupe.py::TestDuplicateDetection::test_find_duplicates_multiple_groups PASSED [ 32%]\ntests/test_etl_dedupe.py::TestDuplicateMerging::test_merge_duplicates_no_duplicates PASSED [ 33%]\ntests/test_etl_dedupe.py::TestDuplicateMerging::test_merge_duplicates_with_merging PASSED [ 33%]\ntests/test_etl_dedupe.py::TestDuplicateMerging::test_merge_duplicates_empty_list PASSED [ 34%]\ntests/test_etl_dedupe.py::TestIntegrationScenarios::test_real_world_scenario PASSED [ 35%]\ntests/test_etl_dedupe.py::TestIntegrationScenarios::test_case_sensitivity_deduplication PASSED [ 36%]\ntests/test_etl_normalize.py::TestCurrencyNormalization::test_normalize_currency_symbols PASSED [ 37%]\ntests/test_etl_normalize.py::TestCurrencyNormalization::test_normalize_currency_words PASSED [ 38%]\ntests/test_etl_normalize.py::TestCurrencyNormalization::test_normalize_currency_codes PASSED [ 38%]\ntests/test_etl_normalize.py::TestCurrencyNormalization::test_normalize_currency_none_or_empty PASSED [ 39%]\ntests/test_etl_normalize.py::TestCurrencyNormalization::test_normalize_currency_unknown PASSED [ 40%]\ntests/test_etl_normalize.py::TestAreaConversion::test_to_sqm_square_meters PASSED [ 41%]\ntests/test_etl_normalize.py::TestAreaConversion::test_to_sqm_square_feet PASSED [ 42%]\ntests/test_etl_normalize.py::TestAreaConversion::test_to_sqm_acres PASSED [ 43%]\ntests/test_etl_normalize.py::TestAreaConversion::test_to_sqm_hectares PASSED [ 44%]\ntests/test_etl_normalize.py::TestAreaConversion::test_to_sqm_invalid_input PASSED [ 44%]\ntests/test_etl_normalize.py::TestAreaConversion::test_to_sqm_unknown_unit PASSED [ 45%]\ntests/test_etl_normalize.py::TestAreaConversion::test_to_square_meters_alias PASSED [ 46%]\ntests/test_etl_normalize.py::TestAreaConversion::test_convert_alias PASSED [ 47%]\ntests/test_etl_normalize.py::TestPriceNormalization::test_normalize_price_basic PASSED [ 48%]\ntests/test_etl_normalize.py::TestPriceNormalization::test_normalize_price_with_currency PASSED [ 49%]\ntests/test_etl_normalize.py::TestPriceNormalization::test_normalize_price_decimal PASSED [ 50%]\ntests/test_etl_normalize.py::TestPriceNormalization::test_normalize_price_european_format PASSED [ 50%]\ntests/test_etl_normalize.py::TestPriceNormalization::test_normalize_price_invalid PASSED [ 51%]\ntests/test_etl_normalize.py::TestAddressNormalization::test_normalize_address_basic PASSED [ 52%]\ntests/test_etl_normalize.py::TestAddressNormalization::test_normalize_address_whitespace PASSED [ 53%]\ntests/test_etl_normalize.py::TestAddressNormalization::test_normalize_address_none_or_empty PASSED [ 54%]\ntests/test_etl_normalize.py::TestIntegrationScenarios::test_complete_listing_normalization PASSED [ 55%]\ntests/test_etl_normalize.py::TestIntegrationScenarios::test_edge_cases_combination PASSED [ 55%]\ntests/test_normalize.py::test_to_sqm_ft2 PASSED                          [ 56%]\ntests/test_normalize.py::test_to_sqm_m2 PASSED                           [ 57%]\ntests/test_schema.py::TestListingModel::test_listing_minimal_valid PASSED [ 58%]\ntests/test_schema.py::TestListingModel::test_listing_full_valid PASSED   [ 59%]\ntests/test_schema.py::TestListingModel::test_listing_validation_price_negative PASSED [ 60%]\ntests/test_schema.py::TestListingModel::test_listing_validation_price_too_high PASSED [ 61%]\ntests/test_schema.py::TestListingModel::test_listing_validation_area_invalid PASSED [ 61%]\ntests/test_schema.py::TestListingModel::test_listing_validation_coordinates PASSED [ 62%]\ntests/test_schema.py::TestListingModel::test_listing_validation_negative_rooms PASSED [ 63%]\ntests/test_schema.py::TestListingModel::test_listing_validation_empty_url PASSED [ 64%]\ntests/test_schema.py::TestListingModel::test_listing_currency_normalization PASSED [ 65%]\ntests/test_schema.py::TestListingModel::test_listing_extra_fields_allowed PASSED [ 66%]\ntests/test_schema.py::TestValidationFunctions::test_validate_listing_success PASSED [ 66%]\ntests/test_schema.py::TestValidationFunctions::test_validate_listing_failure PASSED [ 67%]\ntests/test_schema.py::TestValidationFunctions::test_validate_listing_missing_scraped_at PASSED [ 68%]\ntests/test_schema.py::TestValidationFunctions::test_validate_listing_exception_handling PASSED [ 69%]\ntests/test_schema.py::TestValidationFunctions::test_validate_batch_mixed_data PASSED [ 70%]\ntests/test_schema.py::TestValidationFunctions::test_validate_batch_empty_list PASSED [ 71%]\ntests/test_schema.py::TestValidationFunctions::test_validate_batch_all_valid PASSED [ 72%]\ntests/test_schema.py::TestValidationStats::test_get_validation_stats_all_valid PASSED [ 72%]\ntests/test_schema.py::TestValidationStats::test_get_validation_stats_mixed PASSED [ 73%]\ntests/test_schema.py::TestValidationStats::test_get_validation_stats_all_invalid PASSED [ 74%]\ntests/test_schema.py::TestValidationStats::test_get_validation_stats_empty_list PASSED [ 75%]\ntests/test_schema.py::TestValidationStats::test_get_validation_stats_error_limit PASSED [ 76%]\ntests/test_schema.py::TestIntegrationScenarios::test_real_world_listing_validation PASSED [ 77%]\ntests/test_schema.py::TestIntegrationScenarios::test_edge_cases_validation PASSED [ 77%]\ntests/test_scraper.py::TestBaseScraper::test_base_scraper_initialization PASSED [ 78%]\ntests/test_scraper.py::TestBaseScraper::test_base_scraper_http_request PASSED [ 79%]\ntests/test_scraper.py::TestBaseScraper::test_base_scraper_user_agent_rotation PASSED [ 80%]\ntests/test_scraper.py::TestBaseScraper::test_base_scraper_rate_limiting PASSED [ 81%]\ntests/test_scraper.py::TestBaseScraper::test_base_scraper_error_handling PASSED [ 82%]\ntests/test_scraper.py::TestDataExtraction::test_extract_price_various_formats PASSED [ 83%]\ntests/test_scraper.py::TestDataExtraction::test_extract_area_various_formats PASSED [ 83%]\ntests/test_scraper.py::TestDataExtraction::test_extract_address_cleaning PASSED [ 84%]\ntests/test_scraper.py::TestDataExtraction::test_extract_property_features PASSED [ 85%]\ntests/test_scraper.py::TestScraperIntegration::test_scrape_listing_complete_flow PASSED [ 86%]\ntests/test_scraper.py::TestScraperIntegration::test_scraper_with_playwright PASSED [ 87%]\ntests/test_scraper.py::TestScraperIntegration::test_scraper_resilience_to_changes PASSED [ 88%]\ntests/test_scraper.py::TestScraperIntegration::test_scraper_handles_missing_data PASSED [ 88%]\ntests/test_scraper.py::TestScraperPerformance::test_scraper_batch_processing PASSED [ 89%]\ntests/test_scraper.py::TestScraperPerformance::test_scraper_memory_usage PASSED [ 90%]\ntests/test_scraper.py::TestScraperPerformance::test_scraper_concurrent_requests PASSED [ 91%]\ntests/test_scraper.py::TestScraperErrorHandling::test_handle_http_errors PASSED [ 92%]\ntests/test_scraper.py::TestScraperErrorHandling::test_handle_timeout_errors PASSED [ 93%]\ntests/test_scraper.py::TestScraperErrorHandling::test_handle_invalid_html PASSED [ 94%]\ntests/test_scraper.py::TestScraperErrorHandling::test_handle_anti_bot_measures PASSED [ 94%]\ntests/test_scraper.py::TestScraperConfiguration::test_scraper_custom_selectors PASSED [ 95%]\ntests/test_scraper.py::TestScraperConfiguration::test_scraper_multiple_sites PASSED [ 96%]\ntests/test_scraper.py::TestScraperConfiguration::test_scraper_headers_customization PASSED [ 97%]\ntests/test_scraper.py::TestScraperFiles::test_scraper_config_files_exist PASSED [ 98%]\ntests/test_scraper.py::TestScraperFiles::test_scraper_output_directory PASSED [ 99%]\ntests/test_scraper.py::TestScraperFiles::test_scraper_logging_configuration PASSED [100%]\n\n=================================== FAILURES ===================================\n________ TestConfigurationFiles.test_gitignore_exists_and_comprehensive ________\ntests/test_configuration.py:92: in test_gitignore_exists_and_comprehensive\n    assert pattern in gitignore_content, f\"Pattern {pattern} should be in .gitignore\"\nE   AssertionError: Pattern *.pyc should be in .gitignore\nE   assert '*.pyc' in '# ====================\\n# ScrappingBot .gitignore\\n# ====================\\n\\n# macOS\\n.DS_Store\\n.DS_Store?\\n._*\\n.Spotlight-V100\\n.Trashes\\nehthumbs.db\\nThumbs.db\\n\\n# Editors/IDEs\\n.vscode/\\n.idea/\\n*.swp\\n*.swo\\n*~\\n.vim/\\n.netrwhist\\n\\n# Python\\n.venv/\\nvenv/\\nenv/\\n__pycache__/\\n*.py[cod]\\n*.pyo\\n*.pyd\\n*.egg-info/\\n.eggs/\\n.pytest_cache/\\n.mypy_cache/\\n.ruff_cache/\\n.coverage\\ncoverage.xml\\nhtmlcov/\\n.tox/\\n.nox/\\n.cache/\\nnosetests.xml\\n*.cover\\n*.py,cover\\n.hypothesis/\\n.pdm.toml\\n\\n# Node.js / JavaScript\\nnode_modules/\\n**/node_modules/\\n.npm/\\n.pnpm-store/\\n.yarn/\\n.yarn-cache/\\n.yarnrc.yml\\n.eslintcache\\nnpm-debug.log*\\nyarn-debug.log*\\nyarn-error.log*\\nlerna-debug.log*\\n\\n# Build outputs\\n**/dist/\\n**/build/\\n**/.vite/\\n**/.vite-cache/\\n**/.parcel-cache/\\n**/.next/\\n**/.nuxt/\\nout/\\n.output/\\n\\n# Docker & Container files\\n.dockerignore\\ndocker-compose.override.yml\\ndocker-compose.local.yml\\n.docker/\\n*.pid\\n.container-*\\n\\n# Database files\\n*.sqlite\\n*.sqlite3\\n*.db\\n*.db-journal\\n*.db-wal\\n*.db-shm\\ndata/*.sql\\nbackups/\\ndumps/\\n\\n# Environment & Secrets (NEVER COMMIT)\\n.env\\n.env.*\\n*.env\\n**/.env\\n**/.env.*\\n.local\\n.envrc\\nsecrets.yml\\nsecrets.json\\n\\n# Logs & PI...last_run.json\\ndata/geocache.json\\ndata/cache/\\ndata/tmp/\\ndata/exports/\\ndata/backups/\\noutput/\\ndownloads/\\nuploads/\\n\\n# Playwright & Browser automation\\nplaywright-report/\\ntest-results/\\n.playwright/\\nplaywright/.cache/\\nscreenshots/\\n*.png\\n*.jpg\\n*.jpeg\\ndebug_*.html\\n\\n# Cloudflare Workers / Wrangler\\nworkers/.wrangler/\\nworkers/.dev.vars\\n.miniflare-*\\n.mf\\n.wrangler/\\n\\n# Archives & Compressed files\\n*.zip\\n*.tar\\n*.tgz\\n*.gz\\n*.rar\\n*.7z\\n*.bz2\\n*.xz\\n\\n# Temporary files\\n*.tmp\\n*.temp\\n*.swp\\n*.swo\\n*~\\n.tmp/\\ntemp/\\n\\n# OS generated files\\nThumbs.db\\nehthumbs.db\\nDesktop.ini\\n$RECYCLE.BIN/\\n.LSOverride\\nIcon?\\n\\n# Network & SSL certificates\\n*.pem\\n*.key\\n*.crt\\n*.p12\\n*.pfx\\n\\n# IDE specific\\n.vscode/settings.json\\n.vscode/tasks.json\\n.vscode/launch.json\\n.vscode/extensions.json\\n*.code-workspace\\n\\n# Runtime & Process files\\npids/\\n*.pid\\n*.seed\\n*.pid.lock\\n\\n# Coverage & Test reports\\ncoverage/\\n.nyc_output/\\njunit.xml\\ntest-report.xml\\n\\n# AI/LLM model files (can be large)\\n*.gguf\\n*.bin\\nmodels/\\ncheckpoints/\\n\\n# Monitoring & Analytics\\ngrafana/data/\\nprometheus/data/\\nmetrics/\\nanalytics/\\n\\n# Custom application data\\nuser_data/\\nprivate/\\nlocal/\\npersonal/\\n'\n______________ TestUtilityFunctions.test_number_parsing_utilities ______________\ntests/test_configuration.py:425: in test_number_parsing_utilities\n    result = float(clean_str)\nE   ValueError: could not convert string to float: '1.234.56'\n\nDuring handling of the above exception, another exception occurred:\ntests/test_configuration.py:431: in test_number_parsing_utilities\n    assert expected_value is None, \\\nE   AssertionError: Number parsing for '1,234.56' should have failed but expected 1234.56\nE   assert 1234.56 is None\n=============================== warnings summary ===============================\netl/schema.py:71\n  /Users/maxencelegendre/project/ScrappingBot/etl/schema.py:71: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/\n    @validator('price')\n\netl/schema.py:78\n  /Users/maxencelegendre/project/ScrappingBot/etl/schema.py:78: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/\n    @validator('area_sqm')\n\netl/schema.py:85\n  /Users/maxencelegendre/project/ScrappingBot/etl/schema.py:85: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/\n    @validator('currency')\n\netl/schema.py:96\n  /Users/maxencelegendre/project/ScrappingBot/etl/schema.py:96: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/\n    @validator('url')\n\n.venv/lib/python3.11/site-packages/pydantic/_internal/_config.py:291\n  /Users/maxencelegendre/project/ScrappingBot/.venv/lib/python3.11/site-packages/pydantic/_internal/_config.py:291: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\n.venv/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:312\n.venv/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:312\n  /Users/maxencelegendre/project/ScrappingBot/.venv/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:312: PydanticDeprecatedSince20: `json_encoders` is deprecated. See https://docs.pydantic.dev/2.9/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/\n    warnings.warn(\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_configuration.py::TestConfigurationFiles::test_gitignore_exists_and_comprehensive\nFAILED tests/test_configuration.py::TestUtilityFunctions::test_number_parsing_utilities\n=========== 2 failed, 116 passed, 21 deselected, 7 warnings in 0.43s ===========\n",
      "error": ""
    },
    "etl_tests": {
      "status": "PASSED",
      "output": "============================= test session starts ==============================\nplatform darwin -- Python 3.11.13, pytest-8.3.2, pluggy-1.6.0 -- /Users/maxencelegendre/project/ScrappingBot/.venv/bin/python\ncachedir: .pytest_cache\nrootdir: /Users/maxencelegendre/project/ScrappingBot\nconfigfile: pytest.ini\nplugins: anyio-4.10.0\ncollecting ... collected 67 items\n\ntests/test_etl_normalize.py::TestCurrencyNormalization::test_normalize_currency_symbols PASSED [  1%]\ntests/test_etl_normalize.py::TestCurrencyNormalization::test_normalize_currency_words PASSED [  2%]\ntests/test_etl_normalize.py::TestCurrencyNormalization::test_normalize_currency_codes PASSED [  4%]\ntests/test_etl_normalize.py::TestCurrencyNormalization::test_normalize_currency_none_or_empty PASSED [  5%]\ntests/test_etl_normalize.py::TestCurrencyNormalization::test_normalize_currency_unknown PASSED [  7%]\ntests/test_etl_normalize.py::TestAreaConversion::test_to_sqm_square_meters PASSED [  8%]\ntests/test_etl_normalize.py::TestAreaConversion::test_to_sqm_square_feet PASSED [ 10%]\ntests/test_etl_normalize.py::TestAreaConversion::test_to_sqm_acres PASSED [ 11%]\ntests/test_etl_normalize.py::TestAreaConversion::test_to_sqm_hectares PASSED [ 13%]\ntests/test_etl_normalize.py::TestAreaConversion::test_to_sqm_invalid_input PASSED [ 14%]\ntests/test_etl_normalize.py::TestAreaConversion::test_to_sqm_unknown_unit PASSED [ 16%]\ntests/test_etl_normalize.py::TestAreaConversion::test_to_square_meters_alias PASSED [ 17%]\ntests/test_etl_normalize.py::TestAreaConversion::test_convert_alias PASSED [ 19%]\ntests/test_etl_normalize.py::TestPriceNormalization::test_normalize_price_basic PASSED [ 20%]\ntests/test_etl_normalize.py::TestPriceNormalization::test_normalize_price_with_currency PASSED [ 22%]\ntests/test_etl_normalize.py::TestPriceNormalization::test_normalize_price_decimal PASSED [ 23%]\ntests/test_etl_normalize.py::TestPriceNormalization::test_normalize_price_european_format PASSED [ 25%]\ntests/test_etl_normalize.py::TestPriceNormalization::test_normalize_price_invalid PASSED [ 26%]\ntests/test_etl_normalize.py::TestAddressNormalization::test_normalize_address_basic PASSED [ 28%]\ntests/test_etl_normalize.py::TestAddressNormalization::test_normalize_address_whitespace PASSED [ 29%]\ntests/test_etl_normalize.py::TestAddressNormalization::test_normalize_address_none_or_empty PASSED [ 31%]\ntests/test_etl_normalize.py::TestIntegrationScenarios::test_complete_listing_normalization PASSED [ 32%]\ntests/test_etl_normalize.py::TestIntegrationScenarios::test_edge_cases_combination PASSED [ 34%]\ntests/test_etl_dedupe.py::TestHashGeneration::test_generate_listing_hash_basic PASSED [ 35%]\ntests/test_etl_dedupe.py::TestHashGeneration::test_generate_listing_hash_consistency PASSED [ 37%]\ntests/test_etl_dedupe.py::TestHashGeneration::test_generate_listing_hash_different_listings PASSED [ 38%]\ntests/test_etl_dedupe.py::TestHashGeneration::test_generate_listing_hash_missing_fields PASSED [ 40%]\ntests/test_etl_dedupe.py::TestHashGeneration::test_generate_listing_hash_different PASSED [ 41%]\ntests/test_etl_dedupe.py::TestHashGeneration::test_generate_listing_hash_missing_fields_partial PASSED [ 43%]\ntests/test_etl_dedupe.py::TestHashGeneration::test_generate_listing_hash_case_insensitive PASSED [ 44%]\ntests/test_etl_dedupe.py::TestDeduplication::test_dedupe_records_empty_list PASSED [ 46%]\ntests/test_etl_dedupe.py::TestDeduplication::test_dedupe_records_no_duplicates PASSED [ 47%]\ntests/test_etl_dedupe.py::TestDeduplication::test_dedupe_records_with_duplicates PASSED [ 49%]\ntests/test_etl_dedupe.py::TestDeduplication::test_dedupe_alias PASSED    [ 50%]\ntests/test_etl_dedupe.py::TestDeduplication::test_dedupe_records_preserves_first_occurrence PASSED [ 52%]\ntests/test_etl_dedupe.py::TestDuplicateDetection::test_find_duplicates_none PASSED [ 53%]\ntests/test_etl_dedupe.py::TestDuplicateDetection::test_find_duplicates_present PASSED [ 55%]\ntests/test_etl_dedupe.py::TestDuplicateDetection::test_find_duplicates_multiple_groups PASSED [ 56%]\ntests/test_etl_dedupe.py::TestDuplicateMerging::test_merge_duplicates_no_duplicates PASSED [ 58%]\ntests/test_etl_dedupe.py::TestDuplicateMerging::test_merge_duplicates_with_merging PASSED [ 59%]\ntests/test_etl_dedupe.py::TestDuplicateMerging::test_merge_duplicates_empty_list PASSED [ 61%]\ntests/test_etl_dedupe.py::TestIntegrationScenarios::test_real_world_scenario PASSED [ 62%]\ntests/test_etl_dedupe.py::TestIntegrationScenarios::test_case_sensitivity_deduplication PASSED [ 64%]\ntests/test_schema.py::TestListingModel::test_listing_minimal_valid PASSED [ 65%]\ntests/test_schema.py::TestListingModel::test_listing_full_valid PASSED   [ 67%]\ntests/test_schema.py::TestListingModel::test_listing_validation_price_negative PASSED [ 68%]\ntests/test_schema.py::TestListingModel::test_listing_validation_price_too_high PASSED [ 70%]\ntests/test_schema.py::TestListingModel::test_listing_validation_area_invalid PASSED [ 71%]\ntests/test_schema.py::TestListingModel::test_listing_validation_coordinates PASSED [ 73%]\ntests/test_schema.py::TestListingModel::test_listing_validation_negative_rooms PASSED [ 74%]\ntests/test_schema.py::TestListingModel::test_listing_validation_empty_url PASSED [ 76%]\ntests/test_schema.py::TestListingModel::test_listing_currency_normalization PASSED [ 77%]\ntests/test_schema.py::TestListingModel::test_listing_extra_fields_allowed PASSED [ 79%]\ntests/test_schema.py::TestValidationFunctions::test_validate_listing_success PASSED [ 80%]\ntests/test_schema.py::TestValidationFunctions::test_validate_listing_failure PASSED [ 82%]\ntests/test_schema.py::TestValidationFunctions::test_validate_listing_missing_scraped_at PASSED [ 83%]\ntests/test_schema.py::TestValidationFunctions::test_validate_listing_exception_handling PASSED [ 85%]\ntests/test_schema.py::TestValidationFunctions::test_validate_batch_mixed_data PASSED [ 86%]\ntests/test_schema.py::TestValidationFunctions::test_validate_batch_empty_list PASSED [ 88%]\ntests/test_schema.py::TestValidationFunctions::test_validate_batch_all_valid PASSED [ 89%]\ntests/test_schema.py::TestValidationStats::test_get_validation_stats_all_valid PASSED [ 91%]\ntests/test_schema.py::TestValidationStats::test_get_validation_stats_mixed PASSED [ 92%]\ntests/test_schema.py::TestValidationStats::test_get_validation_stats_all_invalid PASSED [ 94%]\ntests/test_schema.py::TestValidationStats::test_get_validation_stats_empty_list PASSED [ 95%]\ntests/test_schema.py::TestValidationStats::test_get_validation_stats_error_limit PASSED [ 97%]\ntests/test_schema.py::TestIntegrationScenarios::test_real_world_listing_validation PASSED [ 98%]\ntests/test_schema.py::TestIntegrationScenarios::test_edge_cases_validation PASSED [100%]\n\n=============================== warnings summary ===============================\netl/schema.py:71\n  /Users/maxencelegendre/project/ScrappingBot/etl/schema.py:71: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/\n    @validator('price')\n\netl/schema.py:78\n  /Users/maxencelegendre/project/ScrappingBot/etl/schema.py:78: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/\n    @validator('area_sqm')\n\netl/schema.py:85\n  /Users/maxencelegendre/project/ScrappingBot/etl/schema.py:85: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/\n    @validator('currency')\n\netl/schema.py:96\n  /Users/maxencelegendre/project/ScrappingBot/etl/schema.py:96: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/\n    @validator('url')\n\n.venv/lib/python3.11/site-packages/pydantic/_internal/_config.py:291\n  /Users/maxencelegendre/project/ScrappingBot/.venv/lib/python3.11/site-packages/pydantic/_internal/_config.py:291: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\n.venv/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:312\n.venv/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:312\n  /Users/maxencelegendre/project/ScrappingBot/.venv/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:312: PydanticDeprecatedSince20: `json_encoders` is deprecated. See https://docs.pydantic.dev/2.9/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/\n    warnings.warn(\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n======================== 67 passed, 7 warnings in 0.08s ========================\n"
    },
    "etl_demo": {
      "status": "PASSED",
      "output": "Starting ETL Pipeline Demo...\n\ud83d\ude80 ETL Pipeline Demo\n==================================================\n\ud83d\udcca Creating sample data...\n\u2705 Sample data saved to: /Users/maxencelegendre/project/ScrappingBot/data/demo_scraped_data.json\n   Records: 7\n\n\ud83d\udccb Sample Data Preview:\n   1. Beautiful condo in downtown Montreal - $450,000 in Montreal, QC H3B 1A1\n   2. Spacious house in Westmount - $1,250,000 in Westmount, QC H3Z 2A7\n   3. Studio apartment near McGill - $280000 in Montreal, QC H3A 0G4\n   ... and 4 more records\n\n\ud83d\udd0d Data Quality Analysis:\n   Quality Score: 0/100\n   Total Records: 7\n   Unique Records: 6\n   Duplicates: 1\n   Quality Issues:\n   - 1 duplicate records found\n   - 1 records missing titles\n   - 1 records missing locations\n   ... and 1 more issues\n\n\ud83d\udd04 Running ETL Pipeline Demo...\n\ud83d\udce5 Step 1: Data Extraction\n   \u2705 Extracted 7 records\n\ud83d\udd27 Step 2: Data Transformation\n   - Cleaning prices...\n   - Converting areas...\n   - Extracting coordinates...\n   - Applying deduplication...\n   \u2705 Transformed 6 records\n   \ud83d\udcc9 Filtered out 1 invalid records\n\u2705 Step 3: Data Validation\n   \u2705 Validated 6 records\n   \ud83d\udcc9 Rejected 0 invalid records\n\n\ud83d\udcbe ETL Results saved to: /Users/maxencelegendre/project/ScrappingBot/data/demo_etl_results.json\n\n\ud83d\udcc8 ETL Results Preview:\n   1. Beautiful condo in downtown Montreal\n      Price: $450,000\n      Location: Montreal, QC H3B 1A1\n      Area: 900 sq ft\n\n   2. Spacious house in Westmount\n      Price: $1,250,000\n      Location: Westmount, QC H3Z 2A7\n      Area: 2500 sq ft\n\n   3. Studio apartment near McGill\n      Price: $280,000\n      Location: Montreal, QC H3A 0G4\n      Area: 450 sq ft\n\n==================================================\n\ud83c\udf89 ETL Pipeline Demo Completed Successfully!\n\ud83d\udcc4 Demo report saved to: /Users/maxencelegendre/project/ScrappingBot/data/demo_etl_report.json\n\nNext steps:\n- Run 'make etl-validate' to validate the full pipeline\n- Use 'make scrape-and-etl' to run with real scraped data\n- Check 'make etl-status' for pipeline reports\n\n\ud83c\udfaf Demo completed successfully!\nThe ETL pipeline is working correctly.\n"
    },
    "etl_validation": {
      "status": "FAILED",
      "output": "\ud83d\ude80 Starting ETL Pipeline Validation\n==================================================\n\ud83d\udd0d Testing Data Extraction...\n\u274c Raw data file not found: /Users/maxencelegendre/project/ScrappingBot/data/scraped_data.json\n   Run scraping first: make scrape-test\n\n\ud83d\udd0d Testing Data Quality...\n\u274c No data available for quality check\n\n\ud83d\udd0d Testing Database Connection...\n\u274c Database connection failed\n\n\ud83d\udd0d Testing ETL Components...\n\u2705 DataExtractor working\n\u2705 DataTransformer working\n\u2705 DataValidator working\n\n==================================================\n\ud83d\udccb Validation Summary:\n   Data Extraction: \u274c FAIL\n   Data Quality: \u274c FAIL\n   Database Connection: \u274c FAIL\n   ETL Components: \u2705 PASS\n\n==================================================\n\u26a0\ufe0f  Some validation tests failed.\n   Please check the issues above before using the ETL pipeline.\n\n\ud83d\udcc4 Validation report saved to: /Users/maxencelegendre/project/ScrappingBot/data/etl_validation_report.json\n",
      "error": "ERROR:etl.loader:Failed to connect to database: connection to server at \"localhost\" (::1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\nINFO:etl:Deduplication: 1 -> 1 listings\nINFO:etl:Validation: 1 valid, 0 invalid\n"
    },
    "docker_available": true,
    "make_commands": {
      "status": "AVAILABLE",
      "available_commands": [
        "build",
        "up",
        "down",
        "clean-containers",
        "etl-demo"
      ]
    }
  },
  "duration_seconds": 1.4416139125823975,
  "overall_success": false
}