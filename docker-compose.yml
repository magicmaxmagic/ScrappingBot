version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: scrapping_bot_postgres
    environment:
      POSTGRES_DB: scrapping_bot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./logs/database:/var/log/postgresql
    ports:
      - "5432:5432"
    networks:
      - scrapping_bot_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d scrapping_bot"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # NestJS Backend
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: scrapping_bot_backend
    environment:
      NODE_ENV: production
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: password123
      DATABASE_NAME: scrapping_bot
      JWT_SECRET: your-super-secret-jwt-key-here
      PORT: 3001
      LOG_LEVEL: info
    ports:
      - "3001:3001"
    volumes:
      - ./logs/api:/app/logs/api
      - ./logging.config.js:/app/logging.config.js
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - scrapping_bot_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Next.js Frontend
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    container_name: scrapping_bot_frontend
    environment:
      NEXT_PUBLIC_API_URL: http://backend:3001
      NODE_ENV: production
      LOG_LEVEL: info
    ports:
      - "3000:3000"
    volumes:
      - ./logs/frontend:/app/logs/frontend
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - scrapping_bot_network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:

networks:
  scrapping_bot_network:
    driver: bridge
